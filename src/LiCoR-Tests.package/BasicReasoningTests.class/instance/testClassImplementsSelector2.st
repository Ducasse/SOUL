classes
testClassImplementsSelector2
	
	self processQuery: ' if [TestClass1] classImplementsSelector: array'
		description:
			'Tests whether classImplements correctly determines that TestClass1 implements a method named #array'.
	self processQuery:
			' if ?c classImplementsSelector: array,?c equals: [TestClass1]'
		description:
			'Tests whether TestClass1 is one of the solutions when checking for implementers of #array'.
	self processQuery:
			' if [TestClass1] classImplementsSelector: ?s,?s equals: array'
		description:
			'Tests whether #array is one of the solutions when checking for the selectors implemented by TestClass1'.
	self processQuery:
			' if not([TestClass1] classImplementsSelector: veryUnlikelyNameForAMethod)'
		description:
			'Tests whether classImplements correctly determines that TestClass1 does not implement a certain method'.
	self processQuery:
			' if [Object] classImplementsSelector: shouldNotImplement' description:
			'Tests whether classImplements correctly determines that Object implements a method named #shouldNotImplement'.
	self processQuery:
			' if not(?c classImplementsSelector: shouldNotImplement,not(?c equals: [Object]))'
		description:
			'Tests that the Object class is the only result returned when searching for classes that implement #shouldNotImplement'.
	self processQuery:
			' if not([TestClass1] classImplementsSelector: ?selector,not([TestClass1] classImplementsSelector: ?selector))'
		description:
			'Sanity test for optimized implementations of classImplements that have seperate cases depending on whether ?selector is bound or not: solutions generated by leaving ?selector unbound should make the predicate hold as well in the bound case'.
	self processQuery:
			' if not(?class classImplementsSelector: #at:put:,not(?class classImplementsSelector: #at:put:))'
		description:
			'Sanity test for optimized implementations of classImplements that have seperate cases depending on whether ?class is bound or not: solutions generated by leaving ?class unbound should make the predicate hold as well in the bound case'.
	self processQuery: ' if one(?class classImplementsSelector: ?selector)'
		description:
			'Sanity test for optimized implementations of classImplements that have seperate cases for the different bound status of its variables: leaving both variables unbound should at least generate one solution and not simply fail'