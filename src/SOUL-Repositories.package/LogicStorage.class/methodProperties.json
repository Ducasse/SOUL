{
	"instance" : { },
	"class" : {
		"addProtocol:" : " 9/10/2018 14:48:32",
		"doingInternalStorage:" : " 9/10/2018 14:48:32",
		"storeClausesWithPredicateKey:" : " 9/10/2018 14:48:32",
		"notifyLayerRemove:" : " 9/10/2018 14:48:32",
		"protocolOfPredicate:" : " 9/10/2018 14:48:32",
		"recompileAll" : " 9/10/2018 14:48:32",
		"assertClauses:inProtocol:ifAlreadyClassified:" : " 9/10/2018 14:48:32",
		"rename:multiplicity:to:argumentMapping:" : " 9/10/2018 14:48:32",
		"allProtocols" : " 9/10/2018 14:48:32",
		"removeProtocol:" : " 9/10/2018 14:48:32",
		"makePredicateKey:multiplicity:" : " 9/10/2018 14:48:32",
		"copyFromLayerWithOldStorageSystem:" : " 9/10/2018 14:48:32",
		"containsClause:" : " 9/10/2018 14:48:32",
		"selectorForPredicateKey:" : " 9/10/2018 14:48:32",
		"protocols" : " 9/10/2018 14:48:32",
		"browserIcon" : " 9/10/2018 14:48:32",
		"removeStorageDependentClass:" : " 9/10/2018 14:48:32",
		"retractClausesWithPredicateKey:" : " 9/10/2018 14:48:32",
		"testMethodForPredicateKey:ifAbsent:" : " 9/10/2018 14:48:32",
		"storageChangedExternally:newCode:" : " 9/10/2018 14:48:32",
		"testClassNamed:ifAbsent:" : " 9/10/2018 14:48:32",
		"compilerClass" : " 9/10/2018 14:48:32",
		"createAnonymousRepository" : " 9/10/2018 14:48:32",
		"assertClause:inProtocol:ifAlreadyClassified:" : " 9/10/2018 14:48:32",
		"addSubclass:" : " 9/10/2018 14:48:32",
		"initPredicateMappings" : " 9/10/2018 14:48:32",
		"replaceClause:with:inProtocol:" : " 9/10/2018 14:48:32",
		"reReadAllStorage" : " 9/10/2018 14:48:32",
		"parseInstanceStorageMethod:" : " 9/10/2018 14:48:32",
		"multiplicityOfKey:" : " 9/10/2018 14:48:32",
		"selectorToPredicateKeyMapping" : " 9/10/2018 14:48:32",
		"retractClause:" : " 9/10/2018 14:48:32",
		"allPredicateKeys" : " 9/10/2018 14:48:32",
		"swapClause:with:" : " 9/10/2018 14:48:32",
		"removeSubclass:" : " 9/10/2018 14:48:32",
		"moveClauseDown:" : " 9/10/2018 14:48:32",
		"layerContainingClause:ifNone:" : " 9/10/2018 14:48:32",
		"errorSignal" : " 9/10/2018 14:48:32",
		"replaceClause:with:" : " 9/10/2018 14:48:32",
		"inAllRename:multiplicity:to:argumentMapping:" : " 9/10/2018 14:48:32",
		"notifyLayerAdd:" : " 9/10/2018 14:48:32",
		"moveClauseUp:" : " 9/10/2018 14:48:32",
		"predicateKeyofClause:" : " 9/10/2018 14:48:32",
		"addStorageDependentClass:" : " 9/10/2018 14:48:32",
		"predicateKeys" : " 9/10/2018 14:48:32",
		"allClauses" : " 9/10/2018 14:48:32",
		"recompileSelectors" : " 9/10/2018 14:48:32",
		"predicateKeysWithoutTestCases" : " 9/10/2018 14:48:32",
		"clausesForPredicateKey:" : " 9/10/2018 14:48:32",
		"usersOfPredicate:multiplicity:" : " 9/10/2018 14:48:32",
		"clausesStore" : " 9/10/2018 14:48:32",
		"defaultProtocol" : " 9/10/2018 14:48:32",
		"movePredicateKey:toProtocol:" : " 9/10/2018 14:48:32",
		"removeSelector:" : " 9/10/2018 14:48:32",
		"storageDependents" : " 9/10/2018 14:48:32",
		"assertClauses:" : " 9/10/2018 14:48:32",
		"initAllPredicateMappings" : " 9/10/2018 14:48:32",
		"gatherClauses" : " 9/10/2018 14:48:32",
		"usersOfPredicateKey:" : " 9/10/2018 14:48:32",
		"reReadFromStorage" : " 9/10/2018 14:48:32",
		"predicateKeysIn:" : " 9/10/2018 14:48:32",
		"replaceClause:with:inProtocol:ifAlreadyClassified:" : " 9/10/2018 14:48:32",
		"classifyPredicate:under:ifAlreadyClassified:" : " 9/10/2018 14:48:32",
		"assertClause:" : " 9/10/2018 14:48:32",
		"collectPredicateNamesMatching:" : " 9/10/2018 14:48:32",
		"testClassIfAbsent:" : " 9/10/2018 14:48:32",
		"initClausesStore" : " 9/10/2018 14:48:32",
		"predicateOfKey:" : " 9/10/2018 14:48:32",
		"allPredicateKeysIn:" : " 9/10/2018 14:48:32",
		"clausesCollectionForKey:" : " 9/10/2018 14:48:32",
		"initialize" : " 9/10/2018 14:48:32",
		"doingInternalStorage" : " 9/10/2018 14:48:32",
		"renameProtocol:to:" : " 9/10/2018 14:48:32",
		"printClausesWithKey:" : " 9/10/2018 14:48:32",
		"notifyImplementationChange" : " 9/10/2018 14:48:32",
		"deleteStorageOfClausesWithPredicateKey:" : " 9/10/2018 14:48:32"
	}
}