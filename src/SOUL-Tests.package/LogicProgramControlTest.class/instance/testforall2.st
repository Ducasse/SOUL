sets of solutions
testforall2
	"self run: #testforall2"

	"self debug: #testforall2"

	"forall/2"

	
	self processQuery: ' if succeeds(forall(member(?x,<[1],[2],[3]>),[true]))'
		description:
			'For every member of a list of integers, does the trivial test succeed?'.
	self processQuery: ' if fails(forall(member(?x,<[1],[2],[3]>),[false]))'
		description:
			'When the condition to be tested is false, the query should clearly fail'.
	self processQuery: ' if succeeds(forall(member(?x,<>),[false]))'
		description: 'Unless when forall works on an empty set'.
	self processQuery:
			' if succeeds(forall(member(?x,<[1],[2],[3]>),integer(?x)))'
		description:
			'For every member of a list of integers, is it indeed an integer?'.
	self processQuery:
			' if succeeds(forall(member(?c,<a,a,a>),and(nonvar(?c),equals(?c,a))))'
		description:
			'Is every member of a list of symbols a equal to the symbol a?'.
	self processQuery:
			' if fails(forall(member(?c,<a,b,c>),and(nonvar(?c),equals(?c,a))))'
		description:
			'Is every member of a list of different symbols equal to the symbol a?'.
	self processQuery: ' if succeeds(forall(member(?x,<>),writeLn(?x)))'
		description:
			'Does forall/2 work when the first argument produces no results?'.
	self processQuery:
			' if succeeds(forall(member(?x,<[1],[2],[3]>),writeLn(?x)))'
		description: 'Can forall/2 be used for its side-effects?'.
	self processQuery:
			' if equals(?coll,[OrderedCollection new]),forall(member(?x,<[1],[2]>),[?x < 3])'
		description:
			'Can forall/2 have smalltalkblocks in the testquery with variables from the first query?'.
	self processQuery:
			' if succeeds(and(forall(member(?x,<[1],[2],[3]>),writeLn(?x)),var(?x)))'
		description:
			'After calling a forall/2, are all the explicit internal variables made unbound again?'.
	self processQuery:
			' if succeeds(and(forall(member(?x,<1,2,3>),equals(?x,?y)),var(?x),var(?y)))'
		description:
			'After calling a forall/2, are all the explicit and implicit internal variables made unbound again?'.
	self processQuery:
			' if succeeds(and(forall(fact1(?AString),writeLn(?AString)),var(?AString)))'
		description:
			'Does this print on the transcript a, a, a, b, b, c each separated by a newline and is the variable ?AString unbound after calling forall/2?'.
	self processQuery:
			' if succeeds(and(forall(fact1(?AString),writeLn(?AString)),var(?AString)))'
		description:
			'Does this print on the transcript a, a, a, b, b, c each separated by a newline and is the variable ?AString unbound after calling forall/2?'.
	self processQuery:
			' if succeeds(and(forall(fact1(?AString),and(write(?AString),writeLstLn(<foo,bar>))),var(?AString)))'
		description:
			'Does this print on the transcript afoobar, afoobar, afoobar, bfoobar, bfoobar, cfoobar each separated by a newline and is the variable ?AString unbound after calling forall/2?'.
	self processQuery:
			' if succeeds(and(forall(fact1(?AString),and(findall(?S,and(fact1(?S),equals(?S,?AString)),?ASet),writeLn(?AString))),var(?AString),var(?ASet)))'
		description:
			'Does this print on the transcript a, a, a, b, b, c each separated by a newline and are the variables ?AString and ?ASet unbound after calling forall/2?'.
	self processQuery:
			' if succeeds(and(forall(fact1(?AString),and(findall(?S,and(fact1(?S),equals(?S,?AString)),?ASet),write(?AString),writeLstLn(<foo,bar>))),var(?AString),var(?ASet)))'
		description:
			'Does this print on the transcript afoobar, afoobar, afoobar, bfoobar, bfoobar, cfoobar each separated by a newline and are the variables ?AString and ?ASet unbound after calling forall/2?'.
	self processQuery: ' if succeeds(forall(equals(?x,1),[?x > 0]))'
		description:
			'Does forall work when the test is a smalltalk term containing variables generated by the query?'.
	self processQuery: ' if succeeds(forall(equals(?x,?y),not(ground(?x))))'
		description:
			'Does forall work when the query generates solutions containing unbound variables that are used in the test?'.
	self processQuery:
			' if counterincr(?c),not(forall(member(?x,<a,a,a,b,a,c,c,c>),and(counterincr(?c),equals(?x,a)))),countervalue(?c,5)'
		description:
			'Is the evaluation of forall shortcut so that as soon as the test fails for one of the query''s solutions, the other solutions are not tested?'